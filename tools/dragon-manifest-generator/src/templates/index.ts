import { TemplateConfig } from '../types.js';

const templates: Record<string, TemplateConfig> = {
  'note-analysis': {
    name: 'my-note-analysis-extension',
    description: 'Provides note analysis',
    version: '0.0.1',
    tools: [
      {
        name: 'note-analyzer',
        description: 'Provides analysis of a note',
        endpoint: 'https://publisher.example.com/note-analysis',
        inputs: [
          {
            name: 'note',
            description: 'Clinical Note generated by dragon copilot',
            data: 'DSP/Note'
          }
        ],
        outputs: [
          {
            name: 'coded-note-analysis-results',
            description: 'Note analysis results in coded format',
            data: 'DSP'
          },
          {
            name: 'note-analysis-results-adaptive-card',
            description: 'Note analysis results in Adaptive Card format',
            data: 'DSP'
          }
        ]
      }
    ]
  },

  'speech-analysis': {
    name: 'my-speech-extension',
    description: 'Provides speech analysis',
    version: '0.0.1',
    tools: [
      {
        name: 'speech-analysis',
        description: 'Provides analysis of iterative speech',
        endpoint: 'https://publisher.example.com/speech-analysis',
        inputs: [
          {
            name: 'iterative-transcript',
            description: 'Iterative transcript',
            data: 'DSP/IterativeTranscript'
          },
          {
            name: 'iterative-audio',
            description: 'Iterative audio',
            data: 'DSP/IterativeAudio'
          }
        ],
        outputs: [
          {
            name: 'speech-analysis-results-adaptive-card',
            description: 'Speech analysis results in Adaptive Card format',
            data: 'DSP'
          },
          {
            name: 'coded-speech-analysis-results',
            description: 'Speech analysis results in coded format',
            data: 'DSP'
          }
        ]
      }
    ]
  }
};

export function getTemplate(templateName: string): TemplateConfig {
  const template = templates[templateName];
  if (!template) {
    throw new Error(`Template '${templateName}' not found. Available templates: ${Object.keys(templates).join(', ')}`);
  }
  return template;
}

export function listTemplates(): string[] {
  return Object.keys(templates);
}
